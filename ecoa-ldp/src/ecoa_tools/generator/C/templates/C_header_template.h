/**
* @file #PREFIXE#_#MODULE_IMPL_NAME#.h
* @brief This is the header of the DA encapsulation library for ECOA
*\n\
* Copyright (c) 2023 Dassault Aviation
*
* SPDX-License-Identifier: MIT
*
* This file is generated by the DA ECOA tools and shall not be modified
*/

#if !defined(_#PREFIXE#_#MODULE_IMPL_NAME#_H)
#define _#PREFIXE#_#MODULE_IMPL_NAME#_H
#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

#include "#MODULE_IMPL_NAME#_container.h"


/* User tool functions */
/******************************************************************************/
#USER_CODE#
/******************************************************************************/

/* Request/Response API */
/******************************************************************************/
#RR_FUNCTIONS#
/******************************************************************************/
#SRS_FUNCTIONS#
/******************************************************************************/
#ARS_FUNCTIONS#
/******************************************************************************/

/* Versioned data */
/******************************************************************************/
#READ_VD_FUNCTIONS#
/******************************************************************************/
#WRITTEN_VD_FUNCTIONS#
/******************************************************************************/

/* Event */
/******************************************************************************/
#EVENTSENT_FUNCTIONS#
/******************************************************************************/

/* Property */
/******************************************************************************/
#PROPERTY_FUNCTIONS#
/******************************************************************************/

/******************************************************************************/
/* log API */
void #PREFIXE#_#MODULE_IMPL_NAME#__log_trace(
      #MODULE_IMPL_NAME#__context *context,
      char *log);
void #PREFIXE#_#MODULE_IMPL_NAME#__log_debug(
      #MODULE_IMPL_NAME#__context *context,
      char *log);
void #PREFIXE#_#MODULE_IMPL_NAME#__log_info(
      #MODULE_IMPL_NAME#__context *context,
      char *log);
void #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(
      #MODULE_IMPL_NAME#__context *context,
      char *log);
void #PREFIXE#_#MODULE_IMPL_NAME#__raise_error(
      #MODULE_IMPL_NAME#__context *context,
      char *log,
      const ECOA__error_code error_code);
void #PREFIXE#_#MODULE_IMPL_NAME#__raise_fatal_error(
      #MODULE_IMPL_NAME#__context *context,
      char *log,
      const ECOA__error_code error_code);

/* Time API */
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_relative_local_time(
        #MODULE_IMPL_NAME#__context *context,
        ECOA__hr_time *relative_local_time);
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_UTC_time(
        #MODULE_IMPL_NAME#__context *context,
        ECOA__global_time *utc_time);
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_absolute_system_time(
        #MODULE_IMPL_NAME#__context *context,
        ECOA__global_time *absolute_system_time);
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_relative_local_time_resolution(
        #MODULE_IMPL_NAME#__context *context,
        ECOA__duration *relative_local_time_resolution);
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_UTC_time_resolution(
        #MODULE_IMPL_NAME#__context *context,
        ECOA__duration *utc_time_resolution);
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_absolute_system_time_resolution(
        #MODULE_IMPL_NAME#__context *context,
        ECOA__duration *absolute_system_time_resolution);
/******************************************************************************/

/* PINFO API */
/******************************************************************************/
#PINFO_FUNCTIONS#
/******************************************************************************/


#if defined(__cplusplus)
}
#endif /* __cplusplus */

#endif /* _#PREFIXE#_#MODULE_IMPL_NAME#_H */
