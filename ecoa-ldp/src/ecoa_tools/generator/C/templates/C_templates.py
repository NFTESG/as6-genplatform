# -*- coding: utf-8 -*-
# Copyright (c) 2023 Dassault Aviation
# SPDX-License-Identifier: MIT

class C_Templates:
    template_C_HEADER = "\
/**\n\
* @file #PREFIXE#_#MODULE_IMPL_NAME#.c\n\
* @brief This is the code of the DA encapsulation library for ECOA\n\
*\n\
* Copyright (c) 2023 Dassault Aviation\n\
*\n\
* SPDX-License-Identifier: MIT\n\
*\n\
* This file is generated by the DA ECOA tools and shall not be modified\n\
*/"

    template_C_INCLUDE = "\
#include <string.h>\n\
\n\
#include <ECOA.h>\n\
#include \"#MODULE_IMPL_NAME#_container.h\"\n\
#include \"#PREFIXE#_#MODULE_IMPL_NAME#.h\""

    template_C_ES_functions = "\
void #PREFIXE#_#MODULE_IMPL_NAME#__send__#OPERATION_NAME#(#MODULE_IMPL_NAME#__context *context\n\
    #PARAMETERS_IN#) {\n\
    \n\
    #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__send(context #PARAMETERS_IN_NAMES#);\n\
}\n"

    template_C_RR_response = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__response_send__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        ECOA__uint32 ID #PARAMETERS_OUT#) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__response_send(context, ID #PARAMETERS_OUT_NAMES#);\n\
\n\
    if(return_status == ECOA__return_status_INVALID_IDENTIFIER) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid Identifier when send_response__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when send_response__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_RR_synchrone = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__request_sync__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context #PARAMETERS_INOUT#) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__request_sync(context #PARAMETERS_INOUT_NAMES#);\n\
\n\
    if(return_status == ECOA__return_status_NO_RESPONSE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"No response when request_sync__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when request_sync__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_RR_asynchrone = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__request_async__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        ECOA__uint32 *ID #PARAMETERS_IN#) {\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__request_async(\n\
        context,\n\
        ID #PARAMETERS_IN_NAMES#);\n\
\n\
    if(return_status == ECOA__return_status_RESOURCE_NOT_AVAILABLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Resource not available when request_async__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when request_async__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_DR_get = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_read_access__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle *data_handle) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__get_read_access(context, data_handle);\n\
\n\
    if(return_status == ECOA__return_status_NO_DATA) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"No data when get_read_access__#OPERATION_NAME#\");\n\
    } else if(return_status == ECOA__return_status_INVALID_HANDLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid handle when get_read_access__#OPERATION_NAME#\");\n\
    } else if(return_status == ECOA__return_status_RESOURCE_NOT_AVAILABLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Resource not available when get_read_access__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when get_read_access__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_DR_release = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__release_read_access__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context, \n\
        #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle *data_handle) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__release_read_access(context, data_handle);\n\
\n\
    if(return_status == ECOA__return_status_RESOURCE_NOT_AVAILABLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Resource not available when release_read_access__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when release_read_access__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_DR_read = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__read__#OPERATION_NAME#(\n\
#MODULE_IMPL_NAME#__context *context, #DATA_TYPE# *data) {\n\
\n\
    ECOA__return_status return_status;\n\
    #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle data_handle;\n\
\n\
    return_status = #PREFIXE#_#MODULE_IMPL_NAME#__get_read_access__#OPERATION_NAME#(context, &data_handle);\n\
\n\
    if(return_status ==  ECOA__return_status_OK) {\n\
        memcpy(data, data_handle.data, sizeof(#DATA_TYPE#));\n\
        return_status = #PREFIXE#_#MODULE_IMPL_NAME#__release_read_access__#OPERATION_NAME#(context, &data_handle);\n\
    }\n\
    return return_status;\n\
}\n"

    template_C_DW_get = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__get_write_access__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle *data_handle) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__get_write_access(context, data_handle);\n\
\n\
    if(return_status == ECOA__return_status_DATA_NOT_INITIALIZED) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_info(context, \"Data not initialized when get_write_access__#OPERATION_NAME#\");\n\
    } else if(return_status == ECOA__return_status_INVALID_HANDLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid handle when get_write_access__#OPERATION_NAME#\");\n\
    } else if(return_status == ECOA__return_status_RESOURCE_NOT_AVAILABLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Resource not available when get_write_access__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when get_write_access__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_DW_cancel = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__cancel_write_access__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle *data_handle) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__cancel_write_access(\n\
context, data_handle);\n\
\n\
    if(return_status == ECOA__return_status_INVALID_HANDLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid handle when cancel_write_access__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when cancel_write_access__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_DW_publish = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__publish_write_access__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle *data_handle) {\n\
\n\
    ECOA__return_status return_status;\n\
    return_status = #MODULE_IMPL_NAME#_container__#OPERATION_NAME#__publish_write_access(context, data_handle);\n\
\n\
    if(return_status == ECOA__return_status_INVALID_HANDLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid handle when publish_write_access__#OPERATION_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when publish_write_access__#OPERATION_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_DW_write = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__write__#OPERATION_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        #DATA_TYPE# *data) {\n\
\n\
    ECOA__return_status return_status;\n\
    #MODULE_IMPL_NAME#_container__#OPERATION_NAME#_handle data_handle;\n\
\n\
    return_status = #PREFIXE#_#MODULE_IMPL_NAME#__get_write_access__#OPERATION_NAME#(context, &data_handle);\n\
\n\
    if(return_status ==  ECOA__return_status_OK ||\n\
       return_status ==  ECOA__return_status_DATA_NOT_INITIALIZED) {\n\
        memcpy(data_handle.data, data, sizeof(#DATA_TYPE#));\n\
        return_status= #PREFIXE#_#MODULE_IMPL_NAME#__publish_write_access__#OPERATION_NAME#(\n\
context, &data_handle);\n\
    }\n\
    return return_status;\n\
}\n"

    template_C_PTY_get = "\
void #PREFIXE#_#MODULE_IMPL_NAME#__get_#PROPERTY_NAME#_value(\n\
#MODULE_IMPL_NAME#__context* context,\n\
#PROPERTY_TYPE_NAME#* value) {\n\
\n\
#MODULE_IMPL_NAME#_container__get_#PROPERTY_NAME#_value(context, value);\n\
}\n"

    template_C_PINFO_read = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__read_#PINFO_NAME#(\n\
        #MODULE_IMPL_NAME#__context *context,\n\
        ECOA__byte *memory_address,\n\
        ECOA__uint32 in_size,\n\
        ECOA__uint32 *out_size) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__read_#PINFO_NAME#(context, memory_address, in_size, out_size);\n\
\n\
    if(return_status == ECOA__return_status_OPERATION_NOT_AVAILABLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Operation not available when read_#PINFO_NAME#\");\n\
    } else if(return_status == ECOA__return_status_INVALID_PARAMETER) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid parameter when read_#PINFO_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when read_#PINFO_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    template_C_PINFO_seek = "\
ECOA__return_status #PREFIXE#_#MODULE_IMPL_NAME#__seek_#PINFO_NAME#(\n\
        #MODULE_IMPL_NAME#__context* context,\n\
        ECOA__int32 offset,\n\
        ECOA__seek_whence_type whence,\n\
        ECOA__uint32 *new_position) {\n\
\n\
    ECOA__return_status return_status;\n\
\n\
    return_status = #MODULE_IMPL_NAME#_container__seek_#PINFO_NAME#(context, offset, whence, new_position);\n\
\n\
    if(return_status == ECOA__return_status_OPERATION_NOT_AVAILABLE) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Operation not available when seek_#PINFO_NAME#\");\n\
    } else if(return_status == ECOA__return_status_INVALID_PARAMETER) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Invalid parameter when seek_#PINFO_NAME#\");\n\
    } else if(return_status != ECOA__return_status_OK) {\n\
        #PREFIXE#_#MODULE_IMPL_NAME#__log_warning(context, \"Unknown error when seek_#PINFO_NAME#\");\n\
    }\n\
\n\
    return return_status;\n\
}\n"

    def __init__(self):
        pass
