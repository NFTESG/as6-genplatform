<componentImplementation
    xmlns="http://www.ecoa.technology/implementation-2.0" componentDefinition="Ping">

    <!-- list of used libraries -->
  <use library="mylib"/>
  <!-- supervision module -->

  <!-- module AM to implement provided operations -->
  <moduleType name="myDemoPing_AM_t">
    <operations>

    <eventSent name="Ping">
      <input name="recordwithping" type="mylib:coord"/>
      <input name="nb_ping" type="mylib:t1"/>
      <input name="arraywithping" type="mylib:Test_array"/>
      <input name="fixedarraywithping" type="mylib:Test_fixed_array"/>

      <input name="enumwithping" type="mylib:Test_enum"/>
   </eventSent>

    <eventReceived name="Pong">
      <input name="recordwithpong" type="mylib:coord"/>
      <input name="nb_pong" type="mylib:t1"/>
      <input name="arraywithpong" type="mylib:Test_array"/>
      <input name="fixedarraywithpong" type="mylib:Test_fixed_array"/>

      <input name="enumwithpong" type="mylib:Test_enum"/>
    </eventReceived>

    <eventReceived name="TriggerPingEvent"/>


    </operations>

  </moduleType>

  <moduleType name="myDemoPong2_AM_t">
    <operations>

    <eventReceived name="Ping">
      <input name="recordwithping" type="mylib:coord"/>
      <input name="nb_ping" type="mylib:t1"/>
      <input name="arraywithping" type="mylib:Test_array"/>
      <input name="fixedarraywithping" type="mylib:Test_fixed_array"/>
      <input name="enumwithping" type="mylib:Test_enum"/>
    </eventReceived>

    <eventSent name="Pong">
      <input name="recordwithpong" type="mylib:coord"/>
      <input name="nb_pong" type="mylib:t1"/>
      <input name="arraywithpong" type="mylib:Test_array"/>
      <input name="fixedarraywithpong" type="mylib:Test_fixed_array"/>
      <input name="enumwithpong" type="mylib:Test_enum"/>
    </eventSent>


    </operations>
  </moduleType>

  <moduleImplementation name="myDemoPing_AM" language="C++" moduleType="myDemoPing_AM_t"/>
  <moduleImplementation name="myDemoPong2_AM" language="C++" moduleType="myDemoPong2_AM_t"/>
  <moduleImplementation name="myDemoPong3_AM" language="C" moduleType="myDemoPong2_AM_t"/>

  <moduleInstance name="myDemoPing_AM_I" implementationName="myDemoPing_AM" relativePriority="100"/>
  <moduleInstance name="myDemoPong2_AM_I" implementationName="myDemoPong2_AM" relativePriority="100"/>
  <moduleInstance name="myDemoPong3_AM_I" implementationName="myDemoPong3_AM" relativePriority="100"/>

   <triggerInstance name="Heart_Beat" relativePriority="0"/>

  <!-- Definition of module operation links for Supervision Module -->

  <!-- Definition of module operation links for AM module -->


  <eventLink>
    <senders>
      <trigger instanceName="Heart_Beat" period="0.100"/>
    </senders>
    <receivers>
      <moduleInstance instanceName="myDemoPing_AM_I" operationName="TriggerPingEvent" fifoSize="12"/>
    </receivers>
  </eventLink>

  <eventLink>
    <senders>
      <moduleInstance instanceName="myDemoPing_AM_I" operationName="Ping"/>
    </senders>
    <receivers>
      <moduleInstance instanceName="myDemoPong2_AM_I" operationName="Ping"/>
      <moduleInstance instanceName="myDemoPong3_AM_I" operationName="Ping"/>
      <reference instanceName="PingPong" operationName="Ping"/>
    </receivers>
  </eventLink>

  <eventLink>
    <senders>
      <reference instanceName="PingPong" operationName="Pong"/>
      <moduleInstance instanceName="myDemoPong2_AM_I" operationName="Pong"/>
      <moduleInstance instanceName="myDemoPong3_AM_I" operationName="Pong"/>
    </senders>
    <receivers>
      <moduleInstance instanceName="myDemoPing_AM_I" operationName="Pong" fifoSize="6"/>
    </receivers>
  </eventLink>

</componentImplementation>
